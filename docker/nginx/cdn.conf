server {
    listen 80;
    server_name localhost;

    # CDN endpoint for MinIO files
    location /cdn/ {
        # Remove /cdn prefix and proxy to MinIO
        rewrite ^/cdn/(.*)$ /$1 break;

        proxy_pass http://minio:9000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Caching configuration
        proxy_cache cdn_cache;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache_valid 200 206 304 301 302 1h;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;

        # Add cache headers
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-CDN-Server "nginx-dev";

        # CORS headers for web access
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range, Content-Type, Accept, Origin, User-Agent";
        add_header Access-Control-Expose-Headers "Accept-Ranges, Content-Encoding, Content-Length, Content-Range";

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Optimize for large files
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;

        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "CDN OK\n";
        add_header Content-Type text/plain;
    }

    # Cache purge endpoint (development only)
    location /purge {
        access_log off;
        proxy_cache_purge cdn_cache $host$uri$is_args$args;
        return 200 "Cache purged\n";
        add_header Content-Type text/plain;
    }

    # Default location - return 404
    location / {
        return 404 "CDN endpoint not found";
        add_header Content-Type text/plain;
    }
}