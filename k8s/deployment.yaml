apiVersion: apps/v1
kind: Deployment
metadata:
  name: machshop-mes-api
  namespace: machshop-mes
  labels:
    app: machshop-mes
    component: api
    version: "1.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: machshop-mes
      component: api
  template:
    metadata:
      labels:
        app: machshop-mes
        component: api
        version: "1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: machshop-mes-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001

      containers:
      - name: machshop-mes-api
        image: ghcr.io/your-org/mes:latest
        imagePullPolicy: Always

        ports:
        - name: http
          containerPort: 3001
          protocol: TCP

        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: machshop-mes-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: machshop-mes-secrets
              key: jwt-secret
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: machshop-mes-secrets
              key: redis-url
        - name: UPLOAD_DIR
          value: "/app/uploads"
        - name: MAX_FILE_SIZE
          value: "10485760"

        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"

        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: tmp
          mountPath: /tmp

      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: machshop-mes-uploads
      - name: tmp
        emptyDir: {}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - machshop-mes
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: machshop-mes-api
  namespace: machshop-mes
  labels:
    app: machshop-mes
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: machshop-mes
    component: api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: machshop-mes-api-hpa
  namespace: machshop-mes
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: machshop-mes-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: machshop-mes-uploads
  namespace: machshop-mes
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard-rwo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: machshop-mes-api
  namespace: machshop-mes
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: machshop-mes-ingress
  namespace: machshop-mes
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - api.machshop-mes.com
    secretName: machshop-mes-tls
  rules:
  - host: api.machshop-mes.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: machshop-mes-api
            port:
              number: 80
