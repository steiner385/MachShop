###############################################################################
# Authentication Service PostgreSQL StatefulSet
# Phase 2, Task 2.3: Database Per Service Pattern
###############################################################################

apiVersion: v1
kind: Service
metadata:
  name: postgres-auth
  namespace: mes-production
  labels:
    app: postgres-auth
    service: auth
    tier: database
spec:
  type: ClusterIP
  clusterIP: None  # Headless service for StatefulSet
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: postgres-auth

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-auth
  namespace: mes-production
  labels:
    app: postgres-auth
    service: auth
    tier: database
spec:
  serviceName: postgres-auth
  replicas: 1
  selector:
    matchLabels:
      app: postgres-auth
  template:
    metadata:
      labels:
        app: postgres-auth
        service: auth
        tier: database
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: "mes_auth"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-auth-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-auth-secret
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-auth-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
  volumeClaimTemplates:
    - metadata:
        name: postgres-auth-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: fast-ssd  # Adjust based on your cluster
        resources:
          requests:
            storage: 10Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-auth-secret
  namespace: mes-production
type: Opaque
stringData:
  username: mes_auth_user
  password: CHANGE_ME_IN_PRODUCTION  # Replace with actual secure password
