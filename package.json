{
  "name": "manufacturing-execution-system",
  "version": "1.0.0",
  "description": "Comprehensive MES for jet engine component manufacturing",
  "main": "dist/index.js",
  "scripts": {
    "build": "tsc",
    "dev": "concurrently --names DEV-BACKEND,DEV-FRONTEND --prefix-colors blue,green \"npm run dev:server\" \"npm run dev:frontend\"",
    "dev:server": "NODE_ENV=development PORT=3001 nodemon --exec tsx src/index.ts",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:stop": "./scripts/stop-dev.sh",
    "dev:logs": "./scripts/dev-logs.sh",
    "dev:cleanup": "./scripts/cleanup-orphaned-processes.sh",
    "e2e:server": "NODE_ENV=test tsx src/index.ts",
    "e2e:frontend": "cd frontend && npm run dev:e2e",
    "start": "node dist/index.js",
    "test": "NODE_ENV=test vitest run",
    "test:env": "NODE_ENV=test vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "test:unit": "vitest run src/tests/services",
    "test:e2e": "playwright test",
    "test:e2e:cleanup": "./scripts/cleanup-test-ports.sh",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:group1": "playwright test --project=authenticated --project=quality-tests",
    "test:e2e:group2": "playwright test --project=collaborative-routing-tests --project=traceability-tests --project=fai-tests",
    "test:e2e:group3": "playwright test --project=equipment-hierarchy-tests --project=material-hierarchy-tests --project=process-segment-hierarchy-tests",
    "test:e2e:group4": "playwright test --project=auth-tests --project=api-tests --project=parameter-management-tests --project=spc-tests",
    "test:e2e:group5": "playwright test --project=routing-feature-tests --project=routing-edge-cases --project=routing-localhost",
    "test:e2e:group6": "playwright test --project=smoke-tests",
    "test:e2e:group7": "playwright test --project=role-tests",
    "test:e2e:sequential": "npm run test:e2e:group1; npm run test:e2e:group2; npm run test:e2e:group3; npm run test:e2e:group4; npm run test:e2e:group5; npm run test:e2e:group6; npm run test:e2e:group7",
    "test:api": "playwright test src/tests/e2e/api-integration.spec.ts",
    "test:auth": "playwright test src/tests/e2e/authentication.spec.ts",
    "test:performance": "playwright test src/tests/e2e/performance.spec.ts",
    "test:all": "npm run test:unit && npm run test:e2e",
    "test:ci": "npm run test:coverage && npm run test:e2e",
    "test:roles": "playwright test src/tests/e2e/roles/",
    "test:roles:report": "playwright test src/tests/e2e/roles/ --reporter=html && playwright show-report",
    "test:roles:tier1": "playwright test src/tests/e2e/roles/production-*.spec.ts src/tests/e2e/roles/manufacturing-*.spec.ts",
    "test:roles:tier2": "playwright test src/tests/e2e/roles/quality-*.spec.ts src/tests/e2e/roles/dcma-*.spec.ts src/tests/e2e/roles/process-*.spec.ts",
    "test:roles:tier3": "playwright test src/tests/e2e/roles/warehouse-*.spec.ts src/tests/e2e/roles/materials-*.spec.ts src/tests/e2e/roles/shipping-*.spec.ts src/tests/e2e/roles/logistics-*.spec.ts",
    "test:roles:tier4": "playwright test src/tests/e2e/roles/maintenance-*.spec.ts",
    "test:roles:tier5": "playwright test src/tests/e2e/roles/plant-*.spec.ts src/tests/e2e/roles/system-*.spec.ts src/tests/e2e/roles/superuser.spec.ts src/tests/e2e/roles/inventory-*.spec.ts",
    "test:roles:production": "playwright test src/tests/e2e/roles/production-*.spec.ts",
    "test:roles:quality": "playwright test src/tests/e2e/roles/quality-*.spec.ts",
    "test:roles:dcma": "playwright test src/tests/e2e/roles/dcma-*.spec.ts",
    "test:roles:compliance": "playwright test src/tests/e2e/roles/dcma-*.spec.ts src/tests/e2e/roles/quality-*.spec.ts --grep='AUDIT'",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write \"src/**/*.ts\"",
    "typecheck": "tsc --noEmit",
    "db:migrate": "npx prisma migrate dev",
    "db:generate": "npx prisma generate",
    "db:seed": "tsx prisma/seed.ts",
    "db:seed:enhanced": "tsx prisma/seed-enhanced.ts",
    "db:seed:comprehensive": "COMPREHENSIVE_SEED=true tsx prisma/seed-enhanced.ts",
    "db:seed:torque": "tsx scripts/seed-torque-data.ts",
    "db:seed:llp": "tsx scripts/seed-llp-data.ts",
    "db:seed:llp:comprehensive": "COMPREHENSIVE_LLP=true tsx scripts/seed-llp-data.ts",
    "migrate:workflow-config": "tsx scripts/migrate-workflow-configurations.ts",
    "migrate:workflow-config:dryrun": "tsx scripts/migrate-workflow-configurations.ts --dryrun",
    "migrate:workflow-config:verify": "tsx scripts/migrate-workflow-configurations.ts --verify",
    "migrate:workflow-config:rollback": "tsx scripts/migrate-workflow-configurations.ts --rollback",
    "docs:api": "redoc-cli serve openapi.yaml",
    "docs:schema": "tsx src/tools/generate-enhanced-data-dictionary.ts",
    "docs:schema:quick": "tsx src/tools/generate-enhanced-data-dictionary.ts --formats html,markdown",
    "docs:schema:json": "tsx src/tools/generate-enhanced-data-dictionary.ts --formats json",
    "docs:schema:enhanced": "tsx src/tools/generate-enhanced-data-dictionary.ts",
    "docs:schema:enhanced:quick": "tsx src/tools/generate-enhanced-data-dictionary.ts --formats html,markdown",
    "docs:schema:coverage": "tsx src/tools/generate-enhanced-data-dictionary.ts --coverage",
    "docs:schema:templates": "tsx src/tools/generate-enhanced-data-dictionary.ts --generate-templates",
    "docs:generate": "./scripts/generate-docs.sh",
    "docs:generate:quick": "./scripts/generate-docs.sh --quick",
    "docs:validate": "./scripts/generate-docs.sh --validate",
    "prepare": "husky install",
    "validate:deps": "node scripts/validate-dependencies.js",
    "deps:audit": "npm audit",
    "deps:update": "npm update && npm audit",
    "deps:check-unused": "npx depcheck",
    "schema:build": "bash ./prisma/modular/build-schema.sh",
    "schema:dev": "npm run schema:build && npx prisma generate",
    "schema:migrate": "npm run schema:build && npx prisma migrate dev",
    "schema:deploy": "npm run schema:build && npx prisma migrate deploy",
    "schema:modularize": "tsx src/tools/schema-modularizer.ts",
    "schema:docs:generate": "tsx src/tools/simple-field-documentor.ts",
    "schema:docs:integrate": "tsx src/tools/integrate-comprehensive-docs.ts",
    "schema:final": "npm run schema:docs:integrate && npx prisma validate --schema=./prisma/schema.final.prisma",
    "schema:validate:all": "npx prisma validate && npm run schema:final",
    "schema:docs:validate": "npm run schema:final && tsx src/tools/verify-schema-coverage.ts",
    "db:generate:documented": "npx prisma generate --schema=./prisma/schema.final.prisma",
    "docs:check": "npm run schema:docs:validate && npm run docs:schema:enhanced:quick",
    "docs:api:extract": "tsx src/tools/test-api-extractor.ts",
    "docs:api:analyze": "tsx src/tools/analyze-api-patterns.ts",
    "docs:api:generate": "tsx src/tools/enhanced-openapi-generator.ts",
    "docs:api:deploy": "tsx src/tools/deploy-api-docs.ts",
    "docs:api:serve": "npx http-server docs/api -p 8080 -o",
    "docs:api:all": "npm run docs:api:extract && npm run docs:api:analyze && npm run docs:api:generate && npm run docs:api:fix-examples && npm run docs:api:deploy",
    "docs:api:dev": "npm run docs:api:all && npm run docs:api:serve",
    "docs:api:verify": "tsx src/tools/verify-docs.ts",
    "docs:api:fix-redoc": "tsx src/tools/fix-redoc-issue.ts",
    "docs:api:fix-examples": "tsx src/tools/fix-dashboard-examples.ts"
  },
  "keywords": [
    "manufacturing",
    "mes",
    "aerospace",
    "quality",
    "traceability"
  ],
  "author": "MES Development Team",
  "license": "PROPRIETARY",
  "dependencies": {
    "@aws-sdk/client-s3": "^3.919.0",
    "@aws-sdk/s3-request-presigner": "^3.919.0",
    "@azure/identity": "^4.13.0",
    "@azure/msal-node": "^3.8.1",
    "@headlessui/react": "^2.2.9",
    "@hello-pangea/dnd": "^18.0.1",
    "@hookform/resolvers": "^5.2.2",
    "@microsoft/microsoft-graph-client": "^3.0.7",
    "@monaco-editor/react": "^4.7.0",
    "@node-saml/node-saml": "^5.1.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.65.0",
    "@opentelemetry/exporter-jaeger": "^2.1.0",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.206.0",
    "@opentelemetry/sdk-trace-base": "^2.1.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "@prisma/client": "^5.22.0",
    "@tailwindcss/forms": "^0.5.10",
    "@types/cookie-parser": "^1.4.10",
    "@types/minio": "^7.1.0",
    "@types/openid-client": "^3.1.6",
    "archiver": "^7.0.1",
    "aws-sdk": "^2.1692.0",
    "axios": "^1.12.2",
    "bcrypt": "^5.1.1",
    "commander": "^14.0.2",
    "compression": "^1.7.4",
    "conjur": "^5.3.1",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "csv-parse": "^5.6.0",
    "csv-stringify": "^6.4.5",
    "d3-hierarchy": "^3.1.2",
    "dagre": "^0.8.5",
    "docx": "^9.5.1",
    "dotenv": "^16.3.1",
    "exceljs": "^4.4.0",
    "express": "^4.18.2",
    "express-prom-bundle": "^8.0.0",
    "express-rate-limit": "^7.1.5",
    "fast-xml-parser": "^5.3.0",
    "framer-motion": "^12.23.24",
    "geoip-lite": "^1.4.10",
    "helmet": "^7.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "jwks-client": "^2.1.0",
    "kafkajs": "^2.2.4",
    "lucide-react": "^0.548.0",
    "luxon": "^3.4.4",
    "mammoth": "^1.11.0",
    "mathjs": "^15.0.0",
    "minio": "^8.0.6",
    "morgan": "^1.10.1",
    "multer": "^1.4.5-lts.1",
    "ndjson": "^2.0.0",
    "node-cron": "^4.2.1",
    "node-fetch": "^3.3.2",
    "nodemailer": "^7.0.10",
    "openid-client": "^6.8.1",
    "pdf-lib": "^1.17.1",
    "pdf-parse": "^2.4.5",
    "pdfkit": "^0.17.2",
    "pptxgenjs": "^4.0.1",
    "prom-client": "^15.1.3",
    "puppeteer": "^23.11.1",
    "react-beautiful-dnd": "^13.1.1",
    "react-datepicker": "^8.8.0",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.65.0",
    "react-quill": "^2.0.0",
    "react-select": "^5.10.2",
    "reactflow": "^11.11.4",
    "redis": "^4.6.11",
    "semver": "^7.7.3",
    "serialport": "^13.0.0",
    "sharp": "^0.34.4",
    "simple-statistics": "^7.8.8",
    "swagger-ui-express": "^5.0.0",
    "turndown": "^7.2.2",
    "uuid": "^9.0.1",
    "vis-data": "^8.0.3",
    "vis-network": "^10.0.2",
    "winston": "^3.18.3",
    "ws": "^8.18.3",
    "xlsx": "^0.18.5",
    "yup": "^1.7.1",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.11.0",
    "@faker-js/faker": "^10.1.0",
    "@jest/globals": "^30.2.0",
    "@playwright/test": "^1.56.0",
    "@types/bcrypt": "^5.0.2",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/d3-hierarchy": "^3.1.7",
    "@types/dagre": "^0.7.53",
    "@types/express": "^4.17.21",
    "@types/jsdom": "^27.0.0",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/luxon": "^3.3.7",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.19.24",
    "@types/node-cron": "^3.0.11",
    "@types/pdf-parse": "^1.1.5",
    "@types/pdfkit": "^0.17.3",
    "@types/supertest": "^6.0.2",
    "@types/swagger-ui-express": "^4.1.6",
    "@types/turndown": "^5.0.6",
    "@types/uuid": "^9.0.7",
    "@types/xlsx": "^0.0.35",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vitest/coverage-v8": "^1.1.0",
    "@vitest/ui": "^1.1.0",
    "concurrently": "^9.2.1",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.0",
    "express-validator": "^7.3.0",
    "husky": "^8.0.3",
    "jest-mock-extended": "^4.0.0",
    "jsdom": "^27.0.0",
    "lint-staged": "^15.2.0",
    "nodemon": "^3.0.2",
    "playwright": "^1.40.1",
    "prettier": "^3.1.1",
    "prisma": "^5.22.0",
    "prisma-erd-generator": "^2.1.0",
    "prisma-markdown": "^1.0.9",
    "supertest": "^6.3.3",
    "tsx": "^4.6.2",
    "typescript": "^5.3.3",
    "vitest": "^1.1.0"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
